{
  "swagger": "2.0",
  "info": {
    "version": "0.3",
    "title": "Slicebox API",
    "description": "Slicebox - safe sharing of medical images",
    "contact": {
      "url": "http://github.org/KarlSjostrand/slicebox"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://opensource.org/licenses/Apache-2.0"
    }
  },
  "host": "127.0.0.1",
  "basePath": "/api",
  "tags": [
    {
      "name": "Meta Data",
      "description": "Methods for handling DICOM meta data (attributes)"
    },
    {
      "name": "Series",
      "description": "Methods concerning series"
    },
    {
      "name": "Images",
      "description": "Methods concerning images"
    },
    {
      "name": "Boxes",
      "description": "Methods for handling box-to-box connections and issuing box commands"
    },
    {
      "name": "Remote Boxes",
      "description": "Methods for handling box-to-box transactions of images (primarily for internal Slicebox use)"
    },
    {
      "name": "SCPs",
      "description": "Methods for handling DICOM storage class providers for receiving images from PACS"
    },
    {
      "name": "SCUs",
      "description": "Methods for handling DICOM storage class users for sending images to PACS"
    },
    {
      "name": "Directories",
      "description": "Methods for handling watch directories for importing images stored as files"
    },
    {
      "name": "Series Types",
      "description": "Methods for defining and handling series types"
    },
    {
      "name": "Logs",
      "description": "Methods for handling log messages"
    },
    {
      "name": "Users",
      "description": "Methods for handling users"
    },
    {
      "name": "System",
      "description": "System management methods"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/octet-stream",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/octet-stream"
  ],
  "paths": {
    "/users": {
      "get": {
        "description": "Returns all users of slicebox",
        "tags": ["Users"],
        "operationId": "findUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user. Dupicates are accepted but not added.",
        "tags": ["Users"],
        "operationId": "addUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "deletes a single user based on the ID supplied",
        "tags": ["Users"],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "user deleted"
          }
        }
      }
    },
    "/users/generateauthtokens": {
      "post": {
        "description": "generate authentication tokens for the current user. Each token makes it possible to submit a request with the token supplied as the query parameter 'authtoken' instead of providing the standard authentication headers. This is useful in html tags which fetch protected resources but does not allow headers to be specififed.",
        "tags": ["Users"],
        "operationId": "generateAuthTokens",
        "parameters": [
          {
            "name": "n",
            "in": "query",
            "description": "number of tokens to generate",
            "required": false,
            "defaultValue": "1",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "authentication tokens",
            "schema": {
              "$ref": "#/definitions/authToken"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "required": [
        "id",
        "user",
        "role"
      ],
      "properties": {
        "id": {
        "type": "integer",
        "format": "int64"
        },
        "user": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "hashedPassword": {
          "type": "string"
        }
      }
    },
    "newUser": {
      "required": [
        "user",
        "role",
        "password"
      ],
      "properties": {
        "user": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "authToken": {
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }              
      }
    },
    "errorModel": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}